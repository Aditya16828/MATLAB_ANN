function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 24-Jan-2023 11:47:40.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = 13xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 1xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [22;118.5;29.5;31.1;79.3;69.4;85;47.2;33;19.1;24.8;21;15.8];
x1_step1.gain = [0.0338983050847458;0.00817494379726139;0.0414507772020725;0.099502487562189;0.0351493848857645;0.0254129606099111;0.0318979266347687;0.0498753117206983;0.124223602484472;0.135135135135135;0.099009900990099;0.143884892086331;0.357142857142857];
x1_step1.ymin = -1;

% Layer 1
b1 = [1.5613666771040406456;1.5568682132945337315;-1.5012841568274974957;-1.1978873493139141626;0.54282828215263445593;1.2653712966376571281;1.3177757239822802671;1.0391671103397501774;0.47097946318743483252;0.37374616466591265018;-0.59284283166687135047;-0.038969101204061121213;0.7611755606308805433;-0.49235962779676717416;-0.047014313662678136607;-0.087289149524882800324;0.3964038620016316905;-1.1467591445819853568;-1.201395462060293351;-0.99613305954673081466;-1.9425738388325162198;1.489506940901436316;1.5094988511882350135;-1.8696049258409996874];
IW1_1 = [-0.017559192683360598519 0.31569292954441707799 -0.30864559698408211563 1.5684808935426959309 1.2351328877058054267 -0.028466604209723814223 -0.27893403969608565607 -0.74676029241375807555 1.0626966117516596366 -0.85054989429450367222 0.084068847759609516279 -0.099562297223860674045 -1.1549197033024682923;-0.95730943885002073301 1.1407437156198476647 0.85283062128716780048 -1.3547045138528768238 0.34073645893534859619 -0.15284737611853971284 0.49225370040377525171 0.64543171507390917352 0.26730301562633762558 -1.2787849785100615652 1.0946544166450691282 0.28124285603308624149 -1.4297008650609759339;0.97191684824316093572 0.52442641425478364603 -0.13588388709125581721 0.44010991177102826155 -0.39573657549804641675 0.037725056700189919801 -0.34899817281434442062 0.016833931249788085943 0.075892675854988780881 0.32275141331009221668 0.73605051709182434116 0.4322939310562743942 0.23956003762048683203;1.051395478437093578 0.2561038760972075834 0.33465613869508525902 0.021243430518617836822 -0.58826678492870332349 -1.4926843608153412823 0.39706511455684723177 0.84934996031386644777 -0.57502226290153246602 0.62396865839992809999 1.1793112985073836985 0.63058674078008303265 -0.49062191844039199085;-0.33759071748617552888 -0.39851867713901256707 -0.083981156680093566047 0.98712193749220866756 0.091365066180749882063 -0.19216019941574191687 0.21584316704067002535 -0.22417567519084585781 0.087612607810326953439 0.50579176013093596342 -0.32425166022779389197 0.41291292803923368426 1.7481441417605989574;-0.73505397546798523223 -0.75132865467236753521 0.49147783423660779123 -0.73877703239709957561 0.13599079170562877739 -0.30617877438770790821 -0.42123676953195460237 -0.49587932210640395247 -0.098640387558308284532 0.11356962050123131647 0.079807071514111357913 0.46554723374507894773 -0.63544911516186730616;-1.0082750677273082385 -1.1098806666369687157 -0.28545708042491130252 -0.44625870061158723345 -0.37531356117677827644 0.28286387961866055196 -0.25493336316553683041 0.13433420271124654755 -0.91914874827826531511 0.27547292584641080992 -0.77186090690153874583 0.05149881831693668699 1.2577894999158540923;-0.14732990904833270784 0.54618361741316701075 -0.33256183291232149779 -0.44192270146623019444 0.72365842684299741538 0.078957910632204947321 0.056326574621315912694 -0.84343036620714395557 -0.012738146908317463449 0.17124465430273849709 -0.64899960437598414043 0.65156683234334522581 0.69396662622354798877;-0.34794839064739552237 0.17525307682598509351 0.86164366087726107502 0.47352383133801645432 0.44028149976700597934 -0.31070852269682308622 -0.0037694807436252468491 0.4149932076574722184 0.63663774039222897905 0.045394505463747056306 0.90734266215997116944 -0.38911561302732827761 -0.82258362688816233366;0.22555266992705927387 -0.079527884428867670619 0.50055540746564319843 0.78962352880593600357 0.53443148544683094503 -0.0091333865897083657548 -0.068682766856962743085 0.30515262323498820729 -1.2008567357731274594 -0.52594208167823719435 -0.44054883368702724145 0.27362204513499410741 0.80404043839559913298;0.79187628063043380422 -1.0482637775442085193 -0.39301752619987728732 -0.23843461727386566773 -0.66611359948850246138 0.34964363855368679745 -0.91167089636339770919 -0.52565073529931582996 0.15553974405053114238 -0.61044357969894968985 -0.091893704109103274691 0.699546245278543255 0.84877162159077212955;0.77998375525793539609 0.80432659551462781788 -0.011991788396028428554 -0.029129137781355844 -0.16490884960697055339 -0.48127854455707191894 -0.088304261508624221078 -0.28850865635170142021 -0.14298788056669986535 -1.3340841569780803599 -0.025137730443311627482 -1.3269532315117218424 -0.023887438750624961914;0.85972334037070752277 0.71000709835339270715 -0.058023130064587383203 -0.36002737568081633057 0.01299436756640242295 1.5714934089947796281 -0.42244556254044141053 -0.53210127526711836765 -0.031420877976102670748 -0.58629390550937277027 0.21965072198319435248 -0.69051714823360266227 -1.1910048695832271548;-0.15688769552654130424 -0.44336206838010594478 1.0685281273302176253 -0.86797305352291120872 -0.13170583595717352821 0.82920867646492668612 -0.14175747676955421928 0.8068406872116545836 -0.90538639797423392519 -0.57790878044764704136 -0.70874016963857677798 -1.1983383055044698473 -0.20289542528634529894;-0.49430984270884048559 -0.15872382759215283854 0.071597085695422946205 0.83429344454829135191 -0.52563617258069328386 0.052975418386819239647 -0.74020935942441468125 0.0077639618758040887525 0.25652399638629391765 0.36110585870485184534 -0.71224771752924576074 0.60964013940385886059 -0.24882384353666253674;0.11279368318631415036 -0.19241315219396779024 -1.0523018773128698378 -0.6191244746340076599 -0.78638732411295086955 0.6850718491357972173 0.22302260746142782422 -0.39170168509845104676 0.57848335805587147718 -0.45472246567455365529 -0.16591105118832427667 -0.33107735619868633448 0.062929711326777271196;-0.13165638860222955708 -0.041978689285045514556 -0.30971520589436440929 0.6859248518509348802 0.059163092013302796823 0.81749875126453286356 0.079699897293991128766 0.61904205783123655848 0.4285344779896733125 -0.17613113490237941594 1.2335753135855016538 0.36326915452546559848 0.30760208318587933807;-1.6256191604430283437 0.49835522317061708986 -0.81347692189449383182 0.26811420211158343285 0.0043371954018223430466 1.0201282829120070783 0.88160400123043125564 0.25261977381909517248 -0.36376875627018928627 0.28686445611318367455 -0.46129612403801545373 0.10003457744792736139 -1.6866869446100578589;0.19023506620258620603 -0.0081270969911610632663 0.21670934990930307285 0.66897532825054439876 -0.2224377739665450715 -0.29972026904329485131 0.16176377141200987131 0.12162801835248766846 0.18806184516709106846 -0.5657162448008815625 -0.29520993944248330454 0.48364301989006308613 0.96715705077613844942;0.22199726056436686061 -0.59812661250709098226 -0.93567506774893782762 0.084573042740814841078 -0.8339092114769705022 -0.81906400800793077721 -0.039056047417901744445 -0.073487284007786077278 -0.85946948756789653956 -0.086465714808660582014 0.47625517244334431011 0.40496498000573138976 0.056934886664506710596;0.25364015544815110559 0.2757612122382255837 0.89473742319641047516 -0.3605186997145750083 0.84465208095920651932 -0.10580161817081186471 -1.0948001516725516247 -0.88814827573211851952 -0.54221567931306668964 1.0509986487198359484 0.12369736887300315786 0.23123451973834344142 0.29071344695612694187;0.52962567624399059518 -0.80108333173602275235 0.0094923961976275533781 -0.72457419059974959019 -0.67405216607515872074 0.72763803516613700939 0.66203318220668738725 -0.25066697673117965817 0.050216576886852999639 -0.10215291790048415532 -0.29113885326800509334 -0.26376834857913922239 -0.14111725628524743326;0.79110738010700221157 -0.24667518717676134576 -0.79676175760521428248 1.117230109926539372 -0.51544430130144580637 -0.72223991297841982906 0.69782854467355914796 -0.75579419380078838309 -0.36435987807766667679 -1.0006571971529127918 0.57007123619549049387 0.64908451273981360163 -0.80453290389968656893;-0.23529755468540872188 -0.71442336734827271982 -0.69766488427545514384 -0.5883443022509410314 -0.42104179386563711507 0.68684939449219062357 -0.36524917830293868182 -0.73443065265279672271 -0.42604531118377336751 -0.44224245653175270343 -0.38657574653098086825 -0.59974812276012334777 0.14149283204654705681];

% Layer 2
b2 = -0.49905167168049097137;
LW2_1 = [-0.80466900476938174602 -1.1184428785308266896 0.10967680945459090669 -1.2045631904207254603 -0.42858859940250504383 0.28931007663463809143 0.91016481943428861889 -0.53078711452576621266 0.45444149521932375446 0.77898976794015517555 0.93329748972993453737 -0.55252561589239901352 0.64783534903951423001 -0.96979283812958927413 -0.46140429551138201214 -0.66659605843718217066 -0.22149431258141560885 1.2817250922601308716 -0.55834822089203839379 -0.37671760080646765623 -1.2849497300880798889 0.032375029046201583838 -1.020266678132853766 0.065357562136739322245];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.0421052631578947;
y1_step1.xoffset = 0;

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
  X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
  Q = size(X{1},2); % samples/series
else
  Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS

    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
  Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
